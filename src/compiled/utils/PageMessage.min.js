define(function(require){"use strict";var PortalMixins=require("drc/mixins/PortalMixins.min"),React=require("react"),ReactCSSTransitionGroup=React.addons.CSSTransitionGroup,PageMessage=React.createClass({displayName:"PageMessage",propTypes:{message:React.PropTypes.string.isRequired,type:React.PropTypes.string.isRequired,duration:React.PropTypes.number,icon:React.PropTypes.string,closeIcon:React.PropTypes.string},getDefaultProps:function(){return{duration:3e3}},getInitialState:function(){return{leaving:!1}},componentDidMount:function(){this.props.duration>0&&(this.timeout=setTimeout(function(){this.dismiss(!0)}.bind(this),this.props.duration))},componentWillUnmount:function(){clearTimeout(this.timeout),this.timeout=null},render:function(){return React.createElement("div",{className:"page-message"},React.createElement(ReactCSSTransitionGroup,{transitionName:"message",transitionAppear:!0},this.getMessageMarkup()))},getMessageMarkup:function(){if(this.state.leaving)return null;var closeIcon=this.props.closeIcon?React.createElement("i",{className:this.props.closeIcon+" close",onClick:this.dismiss.bind(this,!1)}):null,icon=this.props.icon?React.createElement("i",{className:this.props.icon}):null;return React.createElement("div",{className:"message "+this.props.type},closeIcon,React.createElement("span",null,icon," ",this.props.message))},dismiss:function(animate){var animationAllowance=animate?1e3:0;this.setState({leaving:animate}),this.timeout=setTimeout(function(){PortalMixins.closePortal()},animationAllowance)}});return PageMessage});
